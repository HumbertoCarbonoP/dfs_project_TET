# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import dfs_pb2 as dfs__pb2

GRPC_GENERATED_VERSION = '1.67.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in dfs_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class NameNodeStub(object):
    """Servicios para el NameNode
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Put = channel.unary_unary(
                '/dfs.NameNode/Put',
                request_serializer=dfs__pb2.PutRequest.SerializeToString,
                response_deserializer=dfs__pb2.PutResponse.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/dfs.NameNode/Get',
                request_serializer=dfs__pb2.GetRequest.SerializeToString,
                response_deserializer=dfs__pb2.GetResponse.FromString,
                _registered_method=True)
        self.ListFiles = channel.unary_unary(
                '/dfs.NameNode/ListFiles',
                request_serializer=dfs__pb2.Empty.SerializeToString,
                response_deserializer=dfs__pb2.ListFilesResponse.FromString,
                _registered_method=True)
        self.ChangeDirectory = channel.unary_unary(
                '/dfs.NameNode/ChangeDirectory',
                request_serializer=dfs__pb2.ChangeDirectoryRequest.SerializeToString,
                response_deserializer=dfs__pb2.DirectoryResponse.FromString,
                _registered_method=True)
        self.MakeDirectory = channel.unary_unary(
                '/dfs.NameNode/MakeDirectory',
                request_serializer=dfs__pb2.MakeDirectoryRequest.SerializeToString,
                response_deserializer=dfs__pb2.DirectoryResponse.FromString,
                _registered_method=True)
        self.RemoveDirectory = channel.unary_unary(
                '/dfs.NameNode/RemoveDirectory',
                request_serializer=dfs__pb2.RemoveDirectoryRequest.SerializeToString,
                response_deserializer=dfs__pb2.DirectoryResponse.FromString,
                _registered_method=True)
        self.RemoveFile = channel.unary_unary(
                '/dfs.NameNode/RemoveFile',
                request_serializer=dfs__pb2.RemoveFileRequest.SerializeToString,
                response_deserializer=dfs__pb2.FileResponse.FromString,
                _registered_method=True)


class NameNodeServicer(object):
    """Servicios para el NameNode
    """

    def Put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeDirectory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeDirectory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDirectory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NameNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=dfs__pb2.PutRequest.FromString,
                    response_serializer=dfs__pb2.PutResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=dfs__pb2.GetRequest.FromString,
                    response_serializer=dfs__pb2.GetResponse.SerializeToString,
            ),
            'ListFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFiles,
                    request_deserializer=dfs__pb2.Empty.FromString,
                    response_serializer=dfs__pb2.ListFilesResponse.SerializeToString,
            ),
            'ChangeDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeDirectory,
                    request_deserializer=dfs__pb2.ChangeDirectoryRequest.FromString,
                    response_serializer=dfs__pb2.DirectoryResponse.SerializeToString,
            ),
            'MakeDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeDirectory,
                    request_deserializer=dfs__pb2.MakeDirectoryRequest.FromString,
                    response_serializer=dfs__pb2.DirectoryResponse.SerializeToString,
            ),
            'RemoveDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDirectory,
                    request_deserializer=dfs__pb2.RemoveDirectoryRequest.FromString,
                    response_serializer=dfs__pb2.DirectoryResponse.SerializeToString,
            ),
            'RemoveFile': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveFile,
                    request_deserializer=dfs__pb2.RemoveFileRequest.FromString,
                    response_serializer=dfs__pb2.FileResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dfs.NameNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dfs.NameNode', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NameNode(object):
    """Servicios para el NameNode
    """

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.NameNode/Put',
            dfs__pb2.PutRequest.SerializeToString,
            dfs__pb2.PutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.NameNode/Get',
            dfs__pb2.GetRequest.SerializeToString,
            dfs__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.NameNode/ListFiles',
            dfs__pb2.Empty.SerializeToString,
            dfs__pb2.ListFilesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangeDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.NameNode/ChangeDirectory',
            dfs__pb2.ChangeDirectoryRequest.SerializeToString,
            dfs__pb2.DirectoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MakeDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.NameNode/MakeDirectory',
            dfs__pb2.MakeDirectoryRequest.SerializeToString,
            dfs__pb2.DirectoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.NameNode/RemoveDirectory',
            dfs__pb2.RemoveDirectoryRequest.SerializeToString,
            dfs__pb2.DirectoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.NameNode/RemoveFile',
            dfs__pb2.RemoveFileRequest.SerializeToString,
            dfs__pb2.FileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class DataNodeStub(object):
    """Servicios para el DataNode
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StoreBlock = channel.unary_unary(
                '/dfs.DataNode/StoreBlock',
                request_serializer=dfs__pb2.StoreBlockRequest.SerializeToString,
                response_deserializer=dfs__pb2.StoreBlockResponse.FromString,
                _registered_method=True)
        self.GetBlock = channel.unary_unary(
                '/dfs.DataNode/GetBlock',
                request_serializer=dfs__pb2.GetBlockRequest.SerializeToString,
                response_deserializer=dfs__pb2.GetBlockResponse.FromString,
                _registered_method=True)


class DataNodeServicer(object):
    """Servicios para el DataNode
    """

    def StoreBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StoreBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.StoreBlock,
                    request_deserializer=dfs__pb2.StoreBlockRequest.FromString,
                    response_serializer=dfs__pb2.StoreBlockResponse.SerializeToString,
            ),
            'GetBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlock,
                    request_deserializer=dfs__pb2.GetBlockRequest.FromString,
                    response_serializer=dfs__pb2.GetBlockResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dfs.DataNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dfs.DataNode', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DataNode(object):
    """Servicios para el DataNode
    """

    @staticmethod
    def StoreBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DataNode/StoreBlock',
            dfs__pb2.StoreBlockRequest.SerializeToString,
            dfs__pb2.StoreBlockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DataNode/GetBlock',
            dfs__pb2.GetBlockRequest.SerializeToString,
            dfs__pb2.GetBlockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
